* {
    margin: 0;
    padding: 0;
    outline: 0;
}

html, body {
    width: 100%;
    //height: 100%;
    scroll-behavior: smooth;
    text-decoration-color: rgba(246,111,183,0.6);
}

::selection {
    background: rgba(246,111,183,0.6); 
}
::-moz-selection {
    background: #000; 
}

::-webkit-scrollbar {
    width: 0px; 
    background: transparent; 
}

::-webkit-scrollbar-thumb {
    background: #fff;
}

body{
    position: relative;
    scroll-behavior: smooth;
    color: #FFF;
    font-size: 16px;
    background-color: #000;
    font-family: 'Chakra Petch', sans-serif;
    font-weight: 100;
}

canvas{
    width: 100%;
    height: 100vh;
    position: fixed;
    
}

svg{
    display: inline-block;
}

article{
    text-align: center;
}

i {
    display:inline-block;
    width:50px;
}

.fixed-img{
    float: right;
    height: 100%;
    position: fixed;
    right: 0;
}

@keyframes opening {
    0% { transform: translate3d(0,0,0) rotateX(0deg);
        transform-origin: center; }
    50% { transform: translate3d(0,-22px,0px) rotateX(-180deg);
        transform-origin: center; }
    100% { transform: translate3d(0,0,0) rotateX(0deg);
        transform-origin: center; }
}

.flap{
    transition: all 0.3s ease-in-out;
    animation: opening 2s infinite;
    -webkit-animation: opening 2s infinite;
}

.-hidden{
    opacity: 0!important;
    transition: opacity 0.2s ease-in-out;
}

.-visible{
    opacity: 1!important;
    display: block!important;
}

.-loaded{
    opacity: 0!important;
}

.chart{
    text-align: center;
    svg{
        width: 40vw;
    }
}

.columns{
    display: flex;
}

#loader-wrapper{
    position: fixed;
    top: 0;
    width: 100%;
    height: 100vh;
    background: #000;
    z-index: 9999;
    opacity: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: opacity 0.3s ease-in-out;
    img{
        position: absolute;
    }
    p{
        font-size: 1em;
        position: absolute;
        z-index: 999;
        color:#FFF;
        font-size: 14px;
        text-shadow: 2px 2px 5px #FFF;
    }
}


#intro-canvas{
    height: 100vh;
    position: relative;
    width: 100%;

    .scrollable{
        position: fixed;
        bottom:0;
        height: 10vh;
        left: 50%;
        transform: translate(-50%,0);
        transition: all 0.3s ease-in-out;
        display: inline-block;
        overflow: hidden;
        z-index: 999;
        opacity: 1;
        p{
            color:#FFF;
            font-size: 14px;
            transition: color 0.3s ease;
            text-shadow: 2px 2px 5px #FFF;
        }
    
        .line{
            width: 1px;
            margin-left: 50%;
            background-color: white;
            box-shadow: 2px 2px 5px #FFF;
            animation: elastic 3s infinite 1.5s;
        }
    }

    .blur{
        position: absolute;
        z-index: 1;
        opacity: 0;
        width: 100%;
        height: 210%;
        background: rgb(58,113,180);
        background: linear-gradient(90deg, rgba(58,113,180,1) 28%, rgba(246,111,183,0.7217261904761905) 58%, rgba(242,211,226,1) 93%);

        .gradient{
            height: 10vh;
            position: absolute;
            bottom: 0;
            width: 100%;
            background: rgb(0,0,0);
            background: linear-gradient(0deg, rgba(0,0,0,0.9304096638655462) 0%, rgba(0,0,0,0.6699054621848739) 5%, rgba(0,0,0,0.4318102240896359) 5%, rgba(0,0,0,0) 100%);
        }
    }


}

.section{
    height: auto;
    position: relative;
    width: 100%;
    z-index: 2;
    margin-bottom: 20%;

    &.first{
        top: 100vh;
    }

    .photo{
        width:50vw;
        opacity: 1;
        position: relative;
        margin-bottom: 40%;
        img{
            position: relative;
            width: 100%;
            display: block;
        }
    }

    .photo-carved{
        width:50vw;
        position: relative;
        img{
            position: relative;
            width: 100%;
            display: block;
        }
    }
    
    .color-block{
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        z-index: 0;
        background-color: rgb(252, 246, 82);

        &.expand{
            animation: expand 2.5s cubic-bezier(.75,-0.5,0,1.75);
        }

        &.purple{
            background-color: purple;
            right: 0;
        }
    }

    

    #introduction{
        padding: 10% 0;
    }

    #block{
        margin-bottom: 40%;
    }

    .typing-text{
        transition: all 1s 1s ease-in-out;
        text-align: center;
        opacity: 0;
        display: none;
        margin-bottom: 300px;
        &:after{
            content: "|";
            animation: blink linear 1s infinite;
        }
        span{
            background-color: rgba(246,111,183,0.6);
        }
    }

    .descriptive-text{
        font-size:6em;
        padding: 10vh 0;
        transition: all 0.3s ease-in-out;
        span{
            cursor: pointer;
            transition: all 0.3s ease-in-out;
            &:hover{
                text-decoration: line-through;
                text-decoration-color: rgba(246,111,183,0.6);
            }
        }
    }

    .slider-container{
        position: relative;
        height: 900px;
    }

    .horizontal-scroll-wrapper {
        width: 100%;
        display: block;
        height: 100vw;
        overflow-y: auto;
        overflow-x: hidden;
        transform: rotate(-90deg) translateY(0px);
        // display: flex;
        // transform: translate3d(0px,0px,0px);

        .element{
            width: 100%;
            height: 80%;
            top: 0;
            left: 0;
            //background-color: rgba(255, 255, 255, 0.5);
            position: relative;
            overflow: hidden;
            transform: rotate(90deg);
            background-image: url('../images/bridge.jpg');
            background-size: cover;
            background-position: center;
            // margin: 0 2vw;
        }
    }
}

.grid{
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    margin: 10% 0;

    img{
        padding: 0 2vw;
        width: 6vw;
    }
}

// Popup //

.modal {
    position: absolute;
    left: 50%;
    bottom: -400px;
    opacity: 0;
    z-index: 99999;
    transform: translate(-50%, -50%);
    width: auto;
    text-align: center;
    display: inline-flex;
    flex-direction: column;
    align-items: center;
    padding: 1.6rem 3rem;
    border: 3px solid black;
    border-radius: 5px;
    background: white;
    box-shadow: 8px 8px 0 rgba(0, 0, 0, 0.2);
    transition: opacity 0.3s ease-in-out;
  }
  .message {
    font-size:1.1rem;
    margin-bottom: 1rem;
    margin-top: 0;
    color: #000;
  }
  .btn {
        font-family:inherit;
        font-size: inherit;
        cursor: pointer;
        background: white;
        padding: 0.3rem 3.4rem;
        border: 3px solid black;
        margin-right: 2.6rem;
        box-shadow: 0 0 0 black;
        transition: all 0.2s;
  }
  
  .btn:last-child {
    margin: 0;
  }
  
  .btn:hover {
    box-shadow: 0.4rem 0.4rem 0 black;
    transform: translate(-0.4rem, -0.4rem);
  }
  
  .btn:active {
    box-shadow: 0 0 0 black;
    transform: translate(0, 0);
  }
  
  .options {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    margin: 5% 0;
  }

// EXPAND ANIMATION //@at-root

@keyframes expand {
    0%{
        width: 100%;
        z-index: 3;
    }
      100% {
        width: 0%;
        z-index: 0;
    }
}


// BLINK ANIMATION //

@keyframes blink {
    0%, 100% {
      opacity: 0;
    } 50% {
      opacity: 1;
    }
}

// // CIRCLE ANIMATION PULSE //

// @keyframes pulse {
//   0% {
//     -moz-box-shadow: 0 0 0 0 rgba(177,40,46, 0.4);
//     box-shadow: 0 0 0 0 rgba(177,40,46, 0.4);
//   }
//   70% {
//       -moz-box-shadow: 0 0 0 10px rgba(177,40,46, 0);
//       box-shadow: 0 0 0 10px rgba(177,40,46, 0);
//   }
//   100% {
//       -moz-box-shadow: 0 0 0 0 rgba(177,40,46, 0);
//       box-shadow: 0 0 0 0 rgba(177,40,46, 0);
//   }
// }

// SCROLL INDICATOR ELASTIC ANIMATION //

@keyframes elastic{
	0% {
		height: 0%;
		}
	70%{
		height: 100%;
	}
	100% {
		height: 0%;
	}
}

@-webkit-keyframes elastic {
	0% {
	  height: 0%;
	}
	70%{
		height: 100%;
	}
	100% {
	height: 0%;
	}
}

// Button snaky border effect
//stroke-dashoffset negative - animation starts from the end
//> stroke-dashoffset on the to of the keyframe - animation gets quicker

.svg-wrapper {
    position: relative;
    top: 50%;
    transform: translateY(-50%);
    margin: 0 auto;
    width: 320px;
    text-align: center;
    cursor: pointer;
  }
  .shape {
    stroke-dasharray: 135 540;
    stroke-dashoffset: -474;
    stroke-width: 8px;
    fill: transparent;
    stroke: #19f6e8;
    border-bottom: 5px solid black;
    transition: stroke-width 1s, stroke-dashoffset 1s, stroke-dasharray 1s;
  }
  .text {
    font-size: 22px;
    line-height: 32px;
    letter-spacing: 5px;
    color: #fff;
    top: -48px;
    position: relative;
  }
  .svg-wrapper:hover .shape {
    stroke-width: 2px;
    stroke-dashoffset: 0;
    stroke-dasharray: 760;
  }


// 3D text mixin

$LIGHTING_FLOOR: 1;
$LIGHTING_CEIL: 2;
$LIGHTING_FLAT: 3;

@mixin text3d($primary, $depth: 5, $shadowsteps: 5, $shadowincrementer: 3px, $shadowopacity: .5, $primaryshadowcolour: #000, $lighting: $LIGHTING_CEIL) {
  $predefinedShadows: (
    0 0 5px rgba($primaryshadowcolour, .05), 
    0 -1px 3px rgba($primaryshadowcolour, .2), 
    0 3px 5px rgba($primaryshadowcolour, .2));
  $value: ();
  @for $i from 1 through $depth {
    $num: $i + px;
    $hueadjust: $i;
    @if($lighting == $LIGHTING_FLOOR) {
      $hueadjust: ($i * 2 - $depth - 5) * 1%;
    } @else if($lighting == $LIGHTING_CEIL) {
      $hueadjust: -($i*2 + $depth - 10) * 1%;
    } @else if($lighting == $LIGHTING_FLAT) {
      $hueadjust: -$depth * 1%;
    }
    $colour: adjust-color($primary, $lightness: $hueadjust);
    $theShadow: 0 $num 0 $colour;
    $value: append($value, $theShadow, comma);
}

@for $i from 1 through $shadowsteps {
    @if($i >= length($predefinedShadows)) {
      $dist: $i * $shadowincrementer;
      $value: append($value, 0 $dist $dist rgba($primaryshadowcolour, $shadowopacity));
    } @else {
      $value: append($value, nth($predefinedShadows, $i));
    }
}

  text-shadow: $value;
}

$primarycolour: #EECCCC;

.pink{
    background: $primarycolour;
    padding: 10vh 0;
    margin-bottom: 10vh;
}

.dimensional {
  color: #FFF;
  font-size: 60px;
  line-height:1em;
  margin: 0;
  text-align: center;
  width: 100%;

  @include text3d(
    adjust-color($primarycolour, $lightness: -8%), 
    $depth: 8, 
    $primaryshadowcolour: adjust-color($primarycolour, $lightness: -10%, $saturation: +20%));
}